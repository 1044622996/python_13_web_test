{"name": "test_bid_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_bid.TestBid object at 0x03F4D550>\nbid_driver = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6b587d3f5e968e96ebcb641ae4f7b2de\")>, <Pages.PageObjects.bid_page.BidPage object at 0x03F4D0B0>)\n\n    @pytest.mark.usefixtures('bid_driver')\n    @pytest.mark.smoke\n    def test_bid_success(self, bid_driver):\n        driver, bidpage = bid_driver  # 进入投标页面\n        bidpage.bid()\n        #  输入金额\n        bidpage.input_bid_money(BidData.bid_data[\"money\"])\n        # 点击投资\n        bidpage.big_success()\n        # 断言\n        # self.assertTrue(self.bidpage.big_success_tishi(),BidData.bid_data[\"prompt\"])\n>       assert bidpage.big_success_tishi(), BidData.bid_data[\"prompt\"]\n\nTestCases\\test_bid.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\PageObjects\\bid_page.py:72: in big_success_tishi\n    return self.wait_element(self.bid_succ).text\nCommon\\basepage.py:27: in wait_element\n    raise e\nCommon\\basepage.py:24: in wait_element\n    return  WebDriverWait(self.driver, timeout).until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6b587d3f5e968e96ebcb641ae4f7b2de\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x03F4CF90>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\zhong\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "c9594f3a-57e6-46ff-8d18-e5392e5df543-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5a46ddef-539a-4103-be72-db630a755143-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "61c9b7b0-023e-4d0a-bd51-f7c5e8546302-attachment.txt", "type": "text/plain"}], "start": 1560237694855, "stop": 1560237759398, "uuid": "8c4ad708-0bfb-4807-b291-659e1c5b7bf9", "historyId": "d55013a5899703cf7ec88d155996aece", "fullName": "TestCases.test_bid.TestBid#test_bid_success", "labels": [{"name": "tag", "value": "all"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_bid"}, {"name": "subSuite", "value": "TestBid"}, {"name": "host", "value": "LAPTOP-P9CEC7BQ"}, {"name": "thread", "value": "11176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_bid"}]}